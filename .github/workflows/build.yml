name: build

on:
  push:
  pull_request:
    branches:
    - master
    - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-13, ubuntu-latest ]
        node: [ 10, 12, 14, 16, 18, 20, 22 ]
        include:
        - node: 10
          python: '3.10'
        - node: 12
          python: '3.10'
        - node: 14
          python: '3.10'
        - node: 16
          python: '3.10'
        - node: 18
          python: '3.12'
        - node: 20
          python: '3.12'
        - node: 22
          python: '3.13'

    runs-on: ${{ matrix.os }}

    name: build node v${{ matrix.node }} ${{ matrix.os }}

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: setup node ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}

    - name: setup python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}

    - name: prepare test volume
      if: contains(matrix.os, 'macos')
      id: test_volume
      run: |
        hdiutil create macos_alias_volume_hfs.dmg -ov -size 32m -fs HFS+ -volname "macos_alias"
        hdiutil attach macos_alias_volume_hfs.dmg
        cp test/basics.js /Volumes/macos_alias
        echo "path=/Volumes/macos_alias" > "$GITHUB_OUTPUT"

    - name: npm ci
      run: npm ci

    - name: npm tests
      run: npm test
      env:
        ROOT_VOLUME: ${{ steps.test_volume.outputs.path }}
